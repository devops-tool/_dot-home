#!/usr/bin/env bash
set -o pipefail

# To-do:
# * learn to link .home/dot/**{!.inb?} files

############################################################

die()  { echo -e 2>&1 ".home ERROR:" "$@"; exit 1; }
warn() { echo -e 2>&1 ".home WARNING:" "$@"; }

set_dest_target() {
    local src="$1"      # relative to ~/.home/
    # non-local outputs:
    # $dest             relative to ~/
    # $target           relative to $(dirname dest/)

    dest="${src#*/}"
    dest="${dest/#dot\//.}"
    [ "$dest" = dot ] && dest=.     # dest is the 'dot' directory itself (no /)

    local slashes="${dest//[^\/]/}"    # Leave only slashes...
    target="${slashes//\//../}.home/$src"
}

symlinker() {
    for module in *; do
        [[ "$module" =~ ^[A-Za-z0-9_-]+$ ]] || continue
        oldifs="$IFS"
        IFS=$'\n'
        for src in $(find 2>/dev/null                           \
            "$module/bin" "$module/dot"                         \
            ! -regex '.*\.inb[0-9]'                             \
            | sort)
        do
            set_dest_target "$src"
            # check if dest is dangling link into .home
            if [ -L ../"$dest" ]; then
                # Remove dangling links into ~/.home/
                link_target="$(readlink ../"$dest")"
                [[ "$link_target" =~ ^${target%%/.home/*}/.home/ ]] \
                    && [ ! -e "$link_target" ] \
                    && rm -f ../"$dest"
            fi
            if [ -d "$src" ]; then
                mkdir -p "../$dest" 2>/dev/null || warn "Conflict: .home/$src/"
            elif [ -f "$src" ]; then
                [ "$(readlink "../$dest")" = "$target" ] && continue
                ln -s "$target" "../$dest" 2>/dev/null \
                    || warn "Conflict: .home/$src"
            else
                : # Ignore anything that's not a dir or file.
            fi
        done
        IFS="$oldifs"
    done
}

############################################################

[ _"$1" = _--define-functions-only ] && { return 0; exit 0; }

cd "$HOME"/.home/ || die "Cannot change to $HOME/.home/."
symlinker
